// Assuming db and transferredInfo are initialized somewhere above
async function RenderSlots() {
  try {
    const docRef = doc(db, "RevoBuissnes", transferredInfo);
    const docSnap = await getDoc(docRef);

    if (docSnap.exists()) {
      const documentData = docSnap.data();
      return documentData;
    } else {
      console.error("No such document!");
      return null;
    }
  } catch (error) {
    console.error("Error fetching document:", error);
    return null;
  }
}
RenderSlots().then((data) => {
  if (!data) return;

  const Events = data.Events;

  function countItems(obj) {
    return Object.keys(obj).length;
  }

  function checkTstamp(tstamp) {
    const eventTime = tstamp instanceof Timestamp ? tstamp.toDate() : new Date(tstamp);
    const currentTime = new Date();
    return eventTime.toDateString() === currentTime.toDateString() || eventTime > currentTime;
  }

  function formatTimestamp(date) {
    return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;
  }

  function getGoodSlots(obj) {
    const goodSlots = [];
    for (let i = 1; i <= countItems(obj); i++) {
      const slotKey = `slot${i}`;
      if (obj[slotKey] && obj[slotKey].Tstamp) {
        const tstamp = obj[slotKey].Tstamp;
        if (checkTstamp(tstamp)) {
          goodSlots.push({
            ...obj[slotKey],
            dateObject: new Date(tstamp),
            day: new Date(tstamp).getDate(),
            month: new Date(tstamp).getMonth() + 1
          });
        }
      }
    }
    return goodSlots.sort((a, b) => a.dateObject - b.dateObject); // Sort by date ascending
  }

  function createSlots(data) {
    const container = document.getElementById("slotsContainer");
    container.innerHTML = "";
    data.forEach((event, index) => {
      const slotId = index + 1;
      const slot = document.createElement("div");
      slot.className = "slot";
      slot.id = `slot${slotId}`;
      slot.innerHTML = `
        <div class="top">
          <div class="DateTimeBlock">
            <div class="dateBlock">
              <span class="SDate" id="S${slotId}Date">${event.Day}</span>
              <span class="SMonth" id="S${slotId}Month">${event.Month}</span>
            </div>
            <a class="STime" id="S${slotId}Time">${event.Time}</a>
          </div>
          <img class="like" id="S${slotId}like" src="${event.likeIcon}" alt="Like">
        </div>
        <div class="center">
          <h1 class="Stittle" id="S${slotId}tittle">${event.Tittle}</h1>
          <h2 class="SLocation" id="S${slotId}Location">${event.Location}</h2>
        </div>
        <div class="bottom">
          <img class="SImg" id="S${slotId}Img" src="${event.Img}" alt="Event Image">
        </div>
      `;
      container.appendChild(slot);
    });
  }

  function scrollToBottom() {
    const container = document.getElementById("slotsContainer");
    container.scrollTop = container.scrollHeight;
  }

  const goodSlots = getGoodSlots(Events);
  createSlots(goodSlots);
  scrollToBottom();
});