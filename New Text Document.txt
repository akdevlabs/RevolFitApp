/* Prevent horizontal scrollbars globally */
html,
body {
  max-width: 100%;
  overflow-x: hidden;
}

.Evaluation{
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  
}

.E-left{
  gap: 2rem;
  display: flex;
  align-items: center;
  flex-direction: column;
}
.line{
  width: 90%;
  float: right;
  height: .5rem;
  margin: -1rem 0 2rem 0;
}
#IconLogo{
  width: 15rem;
}
.TextContent{
  padding: 2rem 2rem 80% 2rem;
  border-radius: 2rem 0 0 2rem;
}
.TextContent h1{
  font-size: 2.5rem;
}
.TextContent p{
  width: 32rem;
  text-align: justify;
  font-size: 1.2rem;
}
.E-right{
  padding: 2rem;
 
}
.form-group{
  gap: 1rem;
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  margin: 1rem 0;
}

input{
  padding: .5rem;
}
.Block {
  display: none;
}
.Block.active {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
 
  padding: 0 10rem 10rem 10rem;
  margin-left: -10rem;


}
#pIcon img{
  width: 50rem;
  height: 50rem;
}
label{
  font-size: 1.5rem;
}
.inputs{
  gap: .5rem;
  width: 100%;
  display: flex;
  flex-direction: column;
}

.Btn{
  width: 100%;
  padding: .3rem;
  font-size: 1.2rem;
  margin: 1.2rem 0;

}
label{
  font-size: 1.1rem;
}

.form-group-dropdown{
  display: flex;
  flex-direction: column;
  
}
.main-question{
  gap: 10rem;
  display: flex;
  align-items: center;
  margin: 1rem 0;
  justify-content: space-between;
}
.extra-question{
  gap: 1rem;
  display: none;
  margin: .5rem 0;
  flex-direction: row;
  justify-content: space-between;
}
.error {
  border: 2px solid red;
  background-color: #ffe6e6;
}
















@media (max-width: 768px) {
  body {
    width: 100%;
    overflow-x: hidden; /* Prevent horizontal scrolling */
    margin: 0; /* Ensure no default body margin causes issues */
  }
  .Evaluation {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 0;
  }
  #mobileImg {
    width: 27rem;
    height: 12rem;
    border-radius: 0 0 8rem 8rem;
  }
  #IconLogo{
    width: 12em;
    margin: 8rem 0 0 0;
    position: absolute;
  }
  .TextContent{
    display: none;
  }
  .Basic-Reg-mobile h1{
    font-size: 2.3rem;
  }
  .line {
    width: 90%;
    height: 0.5rem;
    margin: -1rem 0 2rem 0;
  }
  .E-right {
    padding: 4rem 2rem 0 2rem;
    border-radius: 4rem 4rem 0 0;
    margin-top: 4rem;
  }
  .form-group{
    gap: 1.2rem;
    display: flex;
    flex-direction: row;
    margin: 1.5rem 0;
  }
  .form-group input{
    width: 90%;
  }
  .inputs{
    width: 100%;
    display: flex;
    flex-direction: column;
  }
  .Btn{
    width: 100%;
    padding: .3rem;
    font-size: 1.2rem;
    margin: 1.2rem 0;

  }
  .Block {
    display: none;
  }
  .Block.active {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
   
    padding:0 4rem;
    margin-left: -3rem;
  
  }
  /*-------------------- Block 2 -------------------------*/
  label{
    font-size: 1.1rem;
  }

  .form-group-dropdown{
    display: flex;
    flex-direction: column;
  }
  .main-question{
    display: flex;
    align-items: center;
    margin: 1rem 0;
    justify-content: space-between;
  }
  .extra-question{
    gap: 1rem;
    display: none;
    margin: .5rem 0;
    flex-direction: row;
    justify-content: space-between;
  }
  /*-------------------- Block 3 -------------------------*/
 .bTittle{
    padding: 2rem 0;
    font-size: 1.2rem;
  }
  .form-group-check{
    display: flex;
    flex-direction: column;
  }
  .checkBoxBlock{
    display: flex;
    align-items: center;
    margin: 1rem 0;
    justify-content: space-between;
  }
  .hiddenQuestion{
    gap: 1rem;
    display: none;
    margin: .5rem 0;
    flex-direction: row;
    justify-content: space-between;
  }

 
}











async function getWorkouts() {
  try {
    const docRef = doc(db, "RevoBuissnes", transferredInfo); // Ensure db and transferredInfo are initialized
    const docSnap = await getDoc(docRef);

    if (docSnap.exists()) {
      const documentData = docSnap.data();
      return documentData; // Return the document data
    } else {
      console.error("No such document!");
      return null;
    }
  } catch (error) {
    console.error("Error fetching document:", error);
    return null;
  }
}

getWorkouts().then((data) => {
  // Validate the data structure
  if (!data || !data.App || !data.UBU || !data.App.workoutBtns) {
      console.error("Invalid data structure or missing properties.");
      return;
  }

  const App = data.App;
  const UBU = data.UBU;

  const workoutBtns = App.workoutBtns;
  const { Gym, Home } = workoutBtns;

  // Validate Gym and Home objects
  if (!Gym || !Gym.backgroundImg || !Home || !Home.backgroundImg) {
      console.error("Missing background image data for Gym or Home.");
      return;
  }

  const GBG = Gym.backgroundImg;
  const HBG = Home.backgroundImg;

  const { Base, Prime1, Prime2 } = UBU.Colors;

  // Function to convert hex color to RGBA
  function hexToRgba(hex, alpha = 0.5) {
      const bigint = parseInt(hex.slice(1), 16);
      const r = (bigint >> 16) & 255;
      const g = (bigint >> 8) & 255;
      const b = bigint & 255;
      return `rgba(${r}, ${g}, ${b}, ${alpha})`;
  }

  // Function to render a workout button
  function renderWorkoutButton(Src, h1Text, divId, locationType) {
      // Find the div with the specified ID
      const div = document.getElementById(divId);

      if (!div) {
          console.error(`Div with id '${divId}' not found.`);
          return;
      }

      // Check if the image URL is valid
      const img = new Image();
      img.src = Src;
      img.onload = () => {
          console.log(`Image ${Src} loaded successfully.`);
      };
      img.onerror = () => {
          console.error(`Failed to load image: ${Src}`);
      };

      // Create a button element
      const button = document.createElement('button');
      button.style.backgroundImage = `url(${Src})`;
      button.style.backgroundSize = 'cover';
      button.style.backgroundPosition = 'center';
      button.style.color = Prime2;
      button.style.boxShadow = `0px 4px 10px ${Prime1}`;
      button.style.backgroundColor = Prime1;
      button.style.border = `2px solid ${Prime1}`;
  
      
       // Adjust based on your layout
     ; // Adjust based on your layout

      // Add an event listener for click actions
      button.addEventListener('click', () => {
          localStorage.setItem('workoutLocation', locationType);
          window.location.href = `index9.1.html`;
      });

      // Create an h1 element for the button label
      const h1 = document.createElement('h1');
      h1.textContent = h1Text;
      h1.style.margin = '0';
      h1.style.color = Prime2;
      h1.style.backgroundColor = hexToRgba(Base, 0.8);
      h1.style.padding = '.7rem';
      h1.style.textAlign = 'center';

      // Append the h1 to the button
      button.appendChild(h1);

      // Append the button to the div
      div.appendChild(button);
  }

  // Render buttons for Gym and Home
  renderWorkoutButton(GBG, 'Rutina En el Gym', 'Gym', 'gym');
  renderWorkoutButton(HBG, 'Rutina En Casa', 'Home', 'home');
}).catch((error) => {
  console.error("An error occurred while fetching workouts:", error);
});















 /* CSS for the image container */
    .image-container {
      position: relative;
      width: 100%;
      height: 300px; /* You can adjust the height */
      overflow: hidden;
    }

    /* CSS to make the image fill and crop */
    .image-container img {
      width: 100%;
      height: 100%;
      object-fit: cover; /* Ensures the image is cropped and fills the container */
    }

    /* CSS for the centered text */
    .image-container h1 {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: white; /* Adjust text color for better visibility */
      font-size: 2rem;
      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7); /* Optional shadow for text contrast */
    }





#plans {
    gap: 1rem;
    display: flex;
    align-items: center;
    justify-content:center;

  }

  #plans img{
    width: 10rem;
    height: 10rem;
    object-fit: cover;
    border-radius: 1rem;
    cursor: pointer;
  }
  #plans h1{
    position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: white; /* Adjust text color for better visibility */
      font-size: 2rem;
      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7); /* Optional shadow for text contrast */
  }




  #plans button{
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    border-radius: 1rem;
    width: 10rem;
    height:10rem;
    border: none;
    cursor: pointer;
    
    margin:10px;
    padding:10px  20px;

  }
