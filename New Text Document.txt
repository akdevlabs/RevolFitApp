// Fetch and log the data
getsubscriptionsData().then((data) => {
  

  function renderClasicTier(){
    const Clásico = data.Clásico; // Retrieve nested data
    const Ctittle = Clásico.tittle
    const CiconImg = Clásico.icon
    const points = Clásico.points
    const Mcost = Clásico.monthCost


    

    function setImageSource(imgId, src) {
      // Get the image element by its ID
      const imgElement = document.getElementById(imgId);
      
      // Check if the element exists and is an image
      if (imgElement && imgElement.tagName === 'IMG') {
          imgElement.src = src; // Set the src attribute
      } else {
          console.error(`Element with ID '${imgId}' is not an image or does not exist.`);
      }
    }
    function renderTitle() {
      // Get the parent element where the title will be appended
      let TCHtop = document.getElementById("TCH-Tittle");
      if (!TCHtop) {
        console.error("Element with id 'TCH-top' not found.");
        return;
      }
    
      // Create a container div for the title
      const titleDiv = document.createElement("div");
      titleDiv.id = "titleSection";
    
      // Create and populate the <h3> and <h1> elements
      const h3 = document.createElement("h3");
      const h1 = document.createElement("h1");
      h3.textContent = "Plan";
      
      // Make sure 'tittle' has a value
      const tittle = Ctittle; // Replace with your desired title
      h1.textContent = tittle;
    
      // Append the <h3> and <h1> to the container div
      titleDiv.appendChild(h3);
      titleDiv.appendChild(h1);
    
      // Append the container div to the parent element
      TCHtop.appendChild(titleDiv);
    }
     
    // Function to render the list
    function renderListFromPoints(points, limit = 2) {
          // Check if the input is a valid array
          if (!Array.isArray(points)) {
              console.error('Provided input is not an array.');
              return;
          }

          // Create the <ul> element
          const ulElement = document.createElement('ul');

          // Render only the first `limit` items initially
          points.slice(0, limit).forEach(point => {
              const liElement = document.createElement('li');
              liElement.textContent = point; // Set the text of the <li>
              ulElement.appendChild(liElement); // Append the <li> to the <ul>
          });

          // Append the <ul> to the "TCH-list" container
          const container = document.getElementById('TCH-list');
          if (container) {
              container.innerHTML = ''; // Clear existing content (if any)
              container.appendChild(ulElement); // Add the new <ul> to the container

              // Show the "Render More" button if there are more items
              const renderMoreBtn = document.getElementById('render-more-btn');
              if (points.length > limit) {
                  renderMoreBtn.style.display = 'inline-block';
                  renderMoreBtn.onclick = () => renderFullList(points);
              } else {
                  renderMoreBtn.style.display = 'none';
              }
          } else {
              console.error('Container with ID "TCH-list" not found.');
          }
    }

    // Function to render the full list
    function renderFullList(points) {
          renderListFromPoints(points, points.length);
    }

    function renderCost() {
      // Get the parent element where the title will be appended
      let TCHpirce = document.getElementById("TCH-pirce");
     
      // Create and populate the <h3> and <h1> elements
      const h2   = document.createElement("h2");
      const a    = document.createElement("span");
      const span = document.createElement("span");
      
      // Make sure 'tittle' has a value
      const MoCost = Mcost;
      // Replace with your desired title
      h2.textContent = MoCost;
      a.textContent = "/";
      span.textContent = "Monthly";
      // Append the <h3> and <h1> to the container div
      
      TCHpirce.appendChild(h2);
      
      TCHpirce.appendChild(a);
    
      TCHpirce.appendChild(span);
    }
     

    renderCost()


    // Render the initial list
    renderListFromPoints(points);


    renderTitle()
    setImageSource("Cicon", CiconImg)
    
   
  }
  function renderGoldTier(){
    const Oro = data.Oro; // Retrieve nested data
    const Ctittle = Oro.tittle
    const CiconImg = Oro.icon
    const points = Oro.points
    const Mcost = Oro.monthCost


    

    function setImageSource(imgId, src) {
      // Get the image element by its ID
      const imgElement = document.getElementById(imgId);
      
      // Check if the element exists and is an image
      if (imgElement && imgElement.tagName === 'IMG') {
          imgElement.src = src; // Set the src attribute
      } else {
          console.error(`Element with ID '${imgId}' is not an image or does not exist.`);
      }
    }
    function renderTitle() {
      // Get the parent element where the title will be appended
      let TCHtop = document.getElementById("TOH-Tittle");
      if (!TCHtop) {
        console.error("Element with id 'TCH-top' not found.");
        return;
      }
    
      // Create a container div for the title
      const titleDiv = document.createElement("div");
      titleDiv.id = "titleSection";
    
      // Create and populate the <h3> and <h1> elements
      const h3 = document.createElement("h3");
      const h1 = document.createElement("h1");
      h3.textContent = "Plan";
      
      // Make sure 'tittle' has a value
      const tittle = Ctittle; // Replace with your desired title
      h1.textContent = tittle;
    
      // Append the <h3> and <h1> to the container div
      titleDiv.appendChild(h3);
      titleDiv.appendChild(h1);
    
      // Append the container div to the parent element
      TCHtop.appendChild(titleDiv);
    }
     
    // Function to render the list
    function renderListFromPoints(points, limit = 2) {
          // Check if the input is a valid array
          if (!Array.isArray(points)) {
              console.error('Provided input is not an array.');
              return;
          }

          // Create the <ul> element
          const ulElement = document.createElement('ul');

          // Render only the first `limit` items initially
          points.slice(0, limit).forEach(point => {
              const liElement = document.createElement('li');
              liElement.textContent = point; // Set the text of the <li>
              ulElement.appendChild(liElement); // Append the <li> to the <ul>
          });

          // Append the <ul> to the "TCH-list" container
          const container = document.getElementById('TOH-list');
          if (container) {
              container.innerHTML = ''; // Clear existing content (if any)
              container.appendChild(ulElement); // Add the new <ul> to the container

              // Show the "Render More" button if there are more items
              const renderMoreBtn = document.getElementById('render-more-btn');
              if (points.length > limit) {
                  renderMoreBtn.style.display = 'inline-block';
                  renderMoreBtn.onclick = () => renderFullList(points);
              } else {
                  renderMoreBtn.style.display = 'none';
              }
          } else {
              console.error('Container with ID "TCH-list" not found.');
          }
    }

    // Function to render the full list
    function renderFullList(points) {
          renderListFromPoints(points, points.length);
    }

    function renderCost() {
      // Get the parent element where the title will be appended
      let TCHpirce = document.getElementById("TOH-pirce");
     
      // Create and populate the <h3> and <h1> elements
      const h2   = document.createElement("h2");
      const a    = document.createElement("span");
      const span = document.createElement("span");
      
      // Make sure 'tittle' has a value
      const MoCost = Mcost;
      // Replace with your desired title
      h2.textContent = MoCost;
      a.textContent = "/";
      span.textContent = "Monthly";
      // Append the <h3> and <h1> to the container div
      
      TCHpirce.appendChild(h2);
      
      TCHpirce.appendChild(a);
    
      TCHpirce.appendChild(span);
    }
     

    renderCost()


    // Render the initial list
    renderListFromPoints(points);


    renderTitle()
    setImageSource("Oicon", CiconImg)
    
   
  }
  function renderPlatinoTier(){
    const Platino = data.Platino; // Retrieve nested data
    const Ctittle = Platino.tittle
    const CiconImg = Platino.icon
    const points = Platino.points
    const Mcost = Platino.monthCost


    

    function setImageSource(imgId, src) {
      // Get the image element by its ID
      const imgElement = document.getElementById(imgId);
      
      // Check if the element exists and is an image
      if (imgElement && imgElement.tagName === 'IMG') {
          imgElement.src = src; // Set the src attribute
      } else {
          console.error(`Element with ID '${imgId}' is not an image or does not exist.`);
      }
    }
    function renderTitle() {
      // Get the parent element where the title will be appended
      let TCHtop = document.getElementById("TPH-Tittle");
      if (!TCHtop) {
        console.error("Element with id 'TCH-top' not found.");
        return;
      }
    
      // Create a container div for the title
      const titleDiv = document.createElement("div");
      titleDiv.id = "titleSection";
    
      // Create and populate the <h3> and <h1> elements
      const h3 = document.createElement("h3");
      const h1 = document.createElement("h1");
      h3.textContent = "Plan";
      
      // Make sure 'tittle' has a value
      const tittle = Ctittle; // Replace with your desired title
      h1.textContent = tittle;
    
      // Append the <h3> and <h1> to the container div
      titleDiv.appendChild(h3);
      titleDiv.appendChild(h1);
    
      // Append the container div to the parent element
      TCHtop.appendChild(titleDiv);
    }
     
    // Function to render the list
    function renderListFromPoints(points, limit = 2) {
          // Check if the input is a valid array
          if (!Array.isArray(points)) {
              console.error('Provided input is not an array.');
              return;
          }

          // Create the <ul> element
          const ulElement = document.createElement('ul');

          // Render only the first `limit` items initially
          points.slice(0, limit).forEach(point => {
              const liElement = document.createElement('li');
              liElement.textContent = point; // Set the text of the <li>
              ulElement.appendChild(liElement); // Append the <li> to the <ul>
          });

          // Append the <ul> to the "TCH-list" container
          const container = document.getElementById('TPH-list');
          if (container) {
              container.innerHTML = ''; // Clear existing content (if any)
              container.appendChild(ulElement); // Add the new <ul> to the container

              // Show the "Render More" button if there are more items
              const renderMoreBtn = document.getElementById('render-more-btn');
              if (points.length > limit) {
                  renderMoreBtn.style.display = 'inline-block';
                  renderMoreBtn.onclick = () => renderFullList(points);
              } else {
                  renderMoreBtn.style.display = 'none';
              }
          } else {
              console.error('Container with ID "TCH-list" not found.');
          }
    }

    // Function to render the full list
    function renderFullList(points) {
          renderListFromPoints(points, points.length);
    }

    function renderCost() {
      // Get the parent element where the title will be appended
      let TCHpirce = document.getElementById("TPH-pirce");
     
      // Create and populate the <h3> and <h1> elements
      const h2   = document.createElement("h2");
      const a    = document.createElement("span");
      const span = document.createElement("span");
      
      // Make sure 'tittle' has a value
      const MoCost = Mcost;
      // Replace with your desired title
      h2.textContent = MoCost;
      a.textContent = "/";
      span.textContent = "Monthly";
      // Append the <h3> and <h1> to the container div
      
      TCHpirce.appendChild(h2);
      
      TCHpirce.appendChild(a);
    
      TCHpirce.appendChild(span);
    }
     

    renderCost()


    // Render the initial list
    renderListFromPoints(points);


    renderTitle()
    setImageSource("Picon", CiconImg)
    
   
  }

  renderClasicTier()
  renderGoldTier()
  renderPlatinoTier()
});