// Retrieve data from localStorage
const transferreduserInfo = localStorage.getItem("transferreduserInfo");
const transferredInfo = localStorage.getItem("transferredInfo");
const workoutLocation = getNewestWorkoutLocation();
const Exersise = "block1";

const Tier = "Beginner"
const Block = 'Block1'
const Routine = 'Routine1'




console.log("Transferred User Info:", transferreduserInfo);
console.log("Transferred Info:", transferredInfo);
console.log(workoutLocation)



// Function to determine the workout type
function checkworkoutLocationValue() {
  const value = workoutLocation;
  if (value === "gym"){
    return("GymWorkout")
  }else{
    return("homeWorkout")
  }

}



// Function to fetch workouts
async function getWorkouts() {
  try {
    // Get the appropriate document reference based on the location
    const docRef = doc(db, "RevolApp", checkworkoutLocationValue());
    const docSnap = await getDoc(docRef);

    if (docSnap.exists()) {
      const documentData = docSnap.data();
      return documentData; // Return the document data
    } else {
      console.error("No such document!");
      return null;
    }
  } catch (error) {
    console.error("Error fetching document:", error);
    return null;
  }
}



// Use the function and handle the result
getWorkouts().then((data) => {
  // Define Tier and Block (replace with actual logic to set these values)
  const Tier = "Beginner"; // Example: Replace with dynamic logic
  const Block = "Block1"; // Example: Replace with dynamic logic
  const Routine = "Routine1"; // Example: Replace with dynamic logic

  // Function to get tier-specific data
  function checkTierValue() {
      if (Tier === "Beginner") {
          return (data.Beginner); // Access the 'Beginner' property
      } else if (Tier === "Intermediate") {
          return data.Intermediate; // Access the 'Intermediate' property
      } else if (Tier === "Advance") {
          return data.Advance; // Access the 'Advance' property
      } else {
          console.error(`Tier ${Tier} not recognized.`);
          return null;
      }
  }
  
  // Function to determine the block value
  function checkBlockValue() {
      return Block; // Return the currently selected block
  }

  // Function to get the active block data
  function getActiveBlock() {
      const TierValue = checkTierValue(); // Get the value for the current tier
      const block = checkBlockValue(); // Determine the block
      
      // Ensure the block exists in the selected tier
      if (TierValue && TierValue[block]) {
          return TierValue[block]; // Return the active block data
      } else {
          console.error(`Block ${block} not found in tier ${Tier}`);
          return null; // Handle case where the block doesn't exist
      }
  }

  // Function to determine the routine value
  function checkRoutineValue() {
      return Routine; // Return the currently selected routine
  }

  // Function to get the active routine data
  function getActiveRoutine() {
      const activeBlock = getActiveBlock(); // Get the active block data
      const routine = checkRoutineValue(); // Determine the routine

      // Ensure the routine exists in the active block
      if (activeBlock && activeBlock[routine]) {
          return activeBlock[routine]; // Return the active routine data
      } else {
          console.error(`Routine ${routine} not found in block.`);
          return null; // Handle case where the routine doesn't exist
      }
  }

  // Call the function to get and log the active routine
  const activeRoutine = getActiveRoutine();

  if (activeRoutine) {
      console.log("Active Routine Data:", activeRoutine);
  }

  function getExerciseContent(){

    const obj = activeRoutine;
    const Exercises = obj.Exercises;





    console.log(Exercises)


  }
  getExerciseContent()
 
});


















async function getBtnIcons() {
  try {
    const docRef = doc(db, "RevoBuissnes", transferredInfo);
    const docSnap = await getDoc(docRef);

    if (docSnap.exists()) {
      const documentData = docSnap.data();
      return documentData; // Return the document data
    } else {
      console.log("No such document!");
      return null;
    }
  } catch (error) {
    console.error("Error fetching document:", error);
    return null;
  }
}
getBtnIcons().then((data) => {
  const App = data.App; // Retrieve nested data
  const Btns = App.Btns

  function getHomeBtn(){
  const homeBtns = Btns.homeBtns
  const blue  = homeBtns[0]
  const white = homeBtns[1]

  function createfireIcon(imgSrc, imgAlt) {
    // Find the div with id 'cal'
    const div = document.getElementById('home');
  
    // Check if the div exists
    if (!div) {
        console.error("Div with id 'Icon' not found.");
        return;
    }
  
    // Create an image element
    const img = document.createElement('img');
  
    // Set the image source and alternative text
    img.src = imgSrc;
    img.alt = imgAlt;
    // Add an event listener to redirect when the image is clicked
    img.addEventListener('click', function() {
      window.location.href = 'index9.html'; // Redirect to index10.html
    });
    // Append the image to the div
    div.appendChild(img);
  }
  
  
  createfireIcon(blue, 'Example image');
  }
  function getDateBtn() {
    const DateBtns = Btns.DateBtns;
    const blue = DateBtns[0];
    const white = DateBtns[1];

    function createfireIcon(imgSrc, imgAlt) {
        // Find the div with id 'Date'
        const div = document.getElementById('Date');
        
        // Check if the div exists
        if (!div) {
            console.error("Div with id 'Date' not found.");
            return;
        }
        
        // Create an image element
        const img = document.createElement('img');
        
        // Set the image source and alternative text
        img.src = imgSrc;
        img.alt = imgAlt;
        
        // Add an event listener to redirect when the image is clicked
        img.addEventListener('click', function() {
            window.location.href = 'index10.html'; // Redirect to index10.html
        });

        // Append the image to the div
        div.appendChild(img);
    }

    createfireIcon(white, 'Example image');
}
  function getGoalBtn(){
    const GoalBtns = Btns.GoalBtns
    const blue  = GoalBtns[0]
    const white = GoalBtns[1]
  
    function createfireIcon(imgSrc, imgAlt) {
      // Find the div with id 'cal'
      const div = document.getElementById('goals');
    
      // Check if the div exists
      if (!div) {
          console.error("Div with id 'Icon' not found.");
          return;
      }
    
      // Create an image element
      const img = document.createElement('img');
    
      // Set the image source and alternative text
      img.src = imgSrc;
      img.alt = imgAlt;
      // Add an event listener to redirect when the image is clicked
      img.addEventListener('click', function() {
        window.location.href = 'index11.html'; // Redirect to index10.html
      });
      // Append the image to the div
      div.appendChild(img);
    }
    
    
    createfireIcon(white , 'Example image');
  }
  function getStatBtn(){
    const StatBtns = Btns.StatBtns
    const blue  = StatBtns[0]
    const white = StatBtns[1]
  
    function createfireIcon(imgSrc, imgAlt) {
      // Find the div with id 'cal'
      const div = document.getElementById('stats');
    
      // Check if the div exists
      if (!div) {
          console.error("Div with id 'Icon' not found.");
          return;
      }
    
      // Create an image element
      const img = document.createElement('img');
    
      // Set the image source and alternative text
      img.src = imgSrc;
      img.alt = imgAlt;
      
      // Add an event listener to redirect when the image is clicked
      img.addEventListener('click', function() {
        window.location.href = 'index12.html'; // Redirect to index10.html
      });
      // Append the image to the div
      div.appendChild(img);
    }
    
    
    createfireIcon(white , 'Example image');
  }
  function getGearBtn(){
    const GearBtns = Btns.GearBtns
    const blue  = GearBtns[0]
    const white = GearBtns[1]
  
    function createfireIcon(imgSrc, imgAlt) {
      // Find the div with id 'cal'
      const div = document.getElementById('gear');
    
      // Check if the div exists
      if (!div) {
          console.error("Div with id 'Icon' not found.");
          return;
      }
    
      // Create an image element
      const img = document.createElement('img');
    
      // Set the image source and alternative text
      img.src = imgSrc;
      img.alt = imgAlt;

      // Add an event listener to redirect when the image is clicked
      img.addEventListener('click', function() {
        window.location.href = 'index9.5.html'; // Redirect to index10.html
      });
    
      // Append the image to the div
      div.appendChild(img);
    }
    
    
    createfireIcon(white , 'Example image');
  }









  getHomeBtn()
  getDateBtn()
  getGoalBtn()
  getStatBtn()
  getGearBtn()


});






 function createButton(buttonType, divId, imgSrcIndex, redirectUrl, imgAlt = "Example image") {
    const buttonGroup = Btns[buttonType];
    const imgSrc = buttonGroup[imgSrcIndex];

    const div = document.getElementById(divId);
    if (!div) {
      console.error(`Div with id '${divId}' not found.`);
      return;
    }

    const img = document.createElement("img");
    img.src = imgSrc;
    img.alt = imgAlt;
    img.addEventListener("click", () => {
      window.location.href = redirectUrl;
    });

    div.appendChild(img);
  }

  const buttonsConfig = [
    { buttonType: "homeBtns", divId: "home", imgSrcIndex: 0, redirectUrl: "index9.html" },
    { buttonType: "DateBtns", divId: "Date", imgSrcIndex: 1, redirectUrl: "index9.2.html" },
    { buttonType: "GoalBtns", divId: "goals", imgSrcIndex: 1, redirectUrl: "index9.3.html" },
    { buttonType: "StatBtns", divId: "stats", imgSrcIndex: 1, redirectUrl: "index9.4.html" },
    { buttonType: "GearBtns", divId: "gear", imgSrcIndex: 1, redirectUrl: "index9.5.html" },
  ];

  buttonsConfig.forEach(({ buttonType, divId, imgSrcIndex, redirectUrl }) => {
    createButton(buttonType, divId, imgSrcIndex, redirectUrl);
  });















  
 function renderLogros(logrosObject) {
  const logrosBlock = document.getElementById('LogrosBlock');

  if (!logrosBlock) {
      console.error('Section with ID "LogrosBlock" not found!');
      return;
  }

  // Clear existing content
  logrosBlock.innerHTML = '';

  // Iterate through the object
  Object.entries(logrosObject).forEach(([key, value]) => {
      // Create a container for each item
      const logroItem = document.createElement('div');
      logroItem.className = 'logro-item';

      // Add the title
      if (value.Tittle) {
          const titleElement = document.createElement('h3');
          titleElement.textContent = value.Tittle;
          logroItem.appendChild(titleElement);
      }

      // Add the date
      if (value.Date) {
          const dateElement = document.createElement('p');
          dateElement.textContent = `Date: ${value.Date}`;
          logroItem.appendChild(dateElement);
      }

      // Add the icon
      if (Array.isArray(value.Icon) && value.Icon.length > 0) {
          const iconElement = document.createElement('div');
          iconElement.className = 'icon-container';
          value.Icon.forEach((icon) => {
              const iconImg = document.createElement('img');
              iconImg.src = icon; // Assuming `icon` is a URL
              iconImg.alt = `${key} icon`;
              iconElement.appendChild(iconImg);
          });
          logroItem.appendChild(iconElement);
      }

      // Append the logroItem to the LogrosBlock
      logrosBlock.appendChild(logroItem);
  });
}



// Call the function to render the items
renderLogros(Logros);









 