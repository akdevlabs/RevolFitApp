
const auth = getAuth();
createUserWithEmailAndPassword(auth, email, password)
  .then((userCredential) => {
    // Signed up 
    const user = userCredential.user;
    // ...
  })
  .catch((error) => {
    const errorCode = error.code;
    const errorMessage = error.message;
    // ..
  });
  getAuth, signInWithEmailAndPassword 

  signInWithEmailAndPassword(auth, email, password)
  .then((userCredential) => {
    // Signed in 
    const user = userCredential.user;
    // ...
  })
  .catch((error) => {
    const errorCode = error.code;
    const errorMessage = error.message;
  });
  
  onAuthStateChanged(auth, (user) => {
    if (user) {
      // User is signed in, see docs for a list of available properties
      // https://firebase.google.com/docs/reference/js/auth.user
      const uid = user.uid;
      // ...
    } else {
      // User is signed out
      // ...
    }
  });


































const nestedValue = data.header; // Retrieve nested data
 
  // Access title, title text, and question
  const title = nestedValue.tittle;
  const titleText = nestedValue.tittleText;

  
  // Create elements for title, title text, question, input, and button
  const h1 = document.createElement("h1");

  const p = document.createElement("p");


  // Set text and attributes for the elements
  h1.textContent = title;
  p.textContent = titleText;


  

 

  // Find the course banner element and append the created elements
  const courseBannerElement = document.getElementById('hero');
  if (courseBannerElement) {
    courseBannerElement.appendChild(h1);
    courseBannerElement.appendChild(p);


  } else {
    console.log("Element with ID #hero not found in the DOM!");
  }

  // Set background image for the 'nav' element if available
  const backgroundElement = document.getElementById('topSec');
  if (backgroundElement && nestedValue.backgroundImg) {
    backgroundElement.style.backgroundImage = `url(${nestedValue.backgroundImg})`;
    backgroundElement.style.backgroundSize = 'cover'; // Cover the entire area
    backgroundElement.style.backgroundPosition = 'center'; // Center the image
  } else if (!nestedValue.backgroundImg) {
    console.log("No backgroundImg property found in the data!");
  }










const tierTopTittle = document.getElementById("tierTopClasic");
    if (tierTopTittle) {
      // Create and append the title
      const h3 = document.createElement("h3");
      const h1 = document.createElement("h1")
      h3.textContent = "Plan";
      h1.textContent = tittle;
      tierTopTittle.appendChild(h3);
      tierTopTittle.appendChild(h1);
    } else {
      console.log("Container with ID #partnerBlock not found in the DOM!");
    }


























     // Function to dynamically create and render the tierTopClasic section
    function createTierTopClasic(tittle, imageUrl) {
      // Check if the parent container already exists
      let tierTopTittle = document.getElementById("tierTopClasic");

      if (!tierTopTittle) {
        // Create the main container if it doesn't exist
        tierTopTittle = document.createElement("div");
        tierTopTittle.id = "tierTopClasic";
        document.body.appendChild(tierTopTittle); // Append it to the body or a specific container
      }

      // Clear previous content to avoid duplication
      tierTopTittle.innerHTML = "";

      // Create a div for the title
      const titleDiv = document.createElement("div");
      titleDiv.id = "titleSection";

      const h3 = document.createElement("h3");
      const h1 = document.createElement("h1");
      h3.textContent = "Plan";
      h1.textContent = tittle;

      titleDiv.appendChild(h3);
      titleDiv.appendChild(h1);

      // Create a div for the image
      const imageDiv = document.createElement("div");
      imageDiv.id = "imageSection";

      const img = document.createElement("img");
      img.src = imageUrl;
      img.alt = "Tier Plan Image";
      img.style.width = "100%"; // Adjust styling as needed
      img.style.height = "auto";

      imageDiv.appendChild(img);

      // Append both divs to the main container
      tierTopTittle.appendChild(titleDiv);
      tierTopTittle.appendChild(imageDiv);
    }

    // Example usage
    createTierTopClasic(tittle, iconImg);






















  body {
    font-family: Arial, sans-serif;
  }

  .Block {
    display: none;
  }

  .Block.active {
    display: block;
  }

  .BusinessContent {
    display: none;
  }

  .BusinessContent.active {
    display: block;
  }

  .error {
    border: 1px solid red;
  }

  .error-message {
    color: red;
    font-size: 0.8rem;
    margin-top: 5px;
  }


@media (max-width: 768px) {
  

  
  
  
  

  


 
  

}