
  function renderGymList(workout) {
    if (!workout) return; // Skip if the workout is undefined

    // Target the GymList section in the DOM
    const gymListSection = document.getElementById("GymList");

    // Create a container for the workout
    const workoutContainer = document.createElement("div");
    workoutContainer.className = "workout-container";

    // Add the workout title
    const title = document.createElement("h2");
    title.textContent = workout.Tittle; // Updated property name
    workoutContainer.appendChild(title);

    // Add reps and time
    const reps = document.createElement("p");
    reps.textContent = `Reps: ${workout.Reps}`;
    workoutContainer.appendChild(reps);

    const time = document.createElement("p");
    time.textContent = `Time: ${workout.time}`;
    workoutContainer.appendChild(time);

    // Add the sets list
    const setsList = document.createElement("ul");
    setsList.className = "sets-list";
    workout.Sets.forEach((set) => {
      const listItem = document.createElement("li");
      listItem.textContent = set;
      setsList.appendChild(listItem);
    });
    workoutContainer.appendChild(setsList);

    // Add the instructions
    const instructionsTitle = document.createElement("h3");
    instructionsTitle.textContent = "Instructions";
    workoutContainer.appendChild(instructionsTitle);

    const instructionsList = document.createElement("ul");
    instructionsList.className = "instructions-list";
    workout.instructions.forEach((instruction) => {
      const listItem = document.createElement("li");
      listItem.textContent = instruction;
      instructionsList.appendChild(listItem);
    });
    workoutContainer.appendChild(instructionsList);

    // Append the workout container to the GymList section
    gymListSection.appendChild(workoutContainer);
  }

  // Iterate over all workouts in the Exersiseses object and render them
  Object.values(Exersiseses).forEach((workout) => {
    renderGymList(workout);
  });

















  
    // Mocked checkTierValue function
    function checkBlockValue() {
      // Logic to determine which block to select
      // Replace this with your actual implementation
      return "Block1"; // Example return value
    }

    // Function to choose a block
    function chooseBlock(blockName) {
      if (gym[blockName]) {
        return gym[blockName];
      } else {
        console.error(`Block "${blockName}" does not exist in the gym object.`);
        return null;
      }
    }

    // Example usage
    const TierValue = checkTierValue(); // Retrieve the block name dynamically
    const selectedBlock = chooseBlock(TierValue);

    if (selectedBlock) {
      console.log(`Selected Block (${TierValue}):`, selectedBlock);
    }






